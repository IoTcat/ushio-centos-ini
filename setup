// set hostname
$ hostname xxx.yimian.xyz
$ hostnamectl set-hostname xxx.yimian.xyz

// physical laptop server setup
$ vi /etc/systemd/logind.conf
HandleLidSwitch=ignore
$ systemctl restart systemd-logind

// physical server network config
# $ vi /etc/sysconfig/network-scripts/ifcfg-enp1s0

// add users
$ adduser iotcat
$ adduser ushio --disabled-password --disabled-login
#/etc/passwd
iotcat:x:1000:1000::/home/iotcat:/bin/bash
ushio:x:1001:1001::/home/ushio:/usr/sbin/nologin
$ echo alias ushio=\'sudo -u ushio\'>~/.bash_aliases

// sudo setup
$ visudo
Defaults rootpw
$ usermod -aG sudo iotcat
//$ passwd -d ushio

// config sshd
#/etc/ssh/sshd_config
Port 2222
PermitRootLogin no
PasswordAuthentication yes
$ sudo systemctl restart sshd 

// connect to ssh
# ~/.ssh/authorized_keys
$ ssh-keygen
# on remotes 
$ ssh-copy-id -p 2222 iotcat@xxx.yimian.xyz

// disable any firewall
// centOS
$ systemctl stop firewalld
$ systemctl disable firewalld
$ sed -i s/SELINUX=enforcing/SELINUX=disabled/g /etc/selinux/config
$ setenforce 0
// debian
$ sudo ufw disable

// package management
// centOS
$ yum update -y
$ yum install epel-release -y
$ yum update -y
$ yum install -y wget git vim screen ntp
// debian
$ sudo apt update && sudo apt upgrade -y
$ sudo apt install -y wget git vim screen

# enable ntp
// debian
$ sudo apt install -y systemd-timesyncd
$ sudo systemctl start systemd-timesyncd
$ sudo systemctl enable systemd-timesyncd
// centOS
$ systemctl start ntpd
$ systemctl enable ntpd
$ systemctl start crond
$ systemctl enable crond
$ crontab -e
*/5 * * * * /usr/sbin/ntpdate -u pool.ntp.org

// disable swap
$ sudo swapoff -a
$ sudo sed -ri '/\sswap\s/s/^#?/#/' /etc/fstab

// install docker
$ sudo apt install -y docker.io
$ sudo systemctl start docker
$ sudo usermod -aG docker ushio
$ cat <<EOF | sudo tee /etc/docker/daemon.json
{
  "exec-opts": ["native.cgroupdriver=systemd"],
  "log-driver": "json-file",
  "log-opts": {
    "max-size": "100m"
  },
  "storage-driver": "overlay2"
}
EOF
$ sudo systemctl enable docker
$ sudo systemctl daemon-reload
$ sudo systemctl restart docker


// br_netfilter
$ cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
br_netfilter
EOF
$ cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
net.ipv4.ip_forward=1 # better than modify /etc/sysctl.conf
EOF
$ sudo sysctl --system


// install kubeadm kubectl kubelet
$ sudo apt-get install -y apt-transport-https ca-certificates curl
$ sudo mkdir /etc/apt/keyrings
$ sudo curl -fsSLo /etc/apt/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
$ echo "deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
$ sudo apt-get update
$ sudo apt install -y kubeadm=1.23.3-00 kubelet=1.23.3-00 kubectl=1.23.3-00
$ sudo apt-mark hold kubelet kubeadm kubectl


// for master node
$ sudo kubeadm init
$ ushio mkdir -p /home/ushio/.kube 
$ sudo cp -i /etc/kubernetes/admin.conf /home/ushio/.kube/config 
$ sudo chown ushio:ushio /home/ushio/.kube/config
$ ushio kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/v0.20.2/Documentation/kube-flannel.yml


// for worker node
$ sudo kubeadm join .........

// add github data
$ git config --global user.name xxx.yimian.xyz
$ git config --global user.email xxx@yimian.xyz
# add local id_rsa.pub to github


// git repo 
$ mkdir data
$ mkdir log
$ git clone --recursive git@github.com:IoTcat/ushio-share.git ~/share
$ git clone -b xxx.yimian.xyz git@github.com:IoTcat/ushio-config.git ~/config

// secret distribution
 $ ssh-copy-id -p 2222 iotcat@usa.yimian.xyz
 $ crontab -e
 0 * * * * /usr/bin/rsync -az -e 'ssh -p 2222' iotcat@usa.yimian.xyz:~/secret /home/iotcat/


reboot
